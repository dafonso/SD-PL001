/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.GUI;

import client.Client;
import common.Agenda;
import common.Event;
import common.Message;
import common.properties.CommonProps;
import java.awt.Color;
import java.awt.TextField;
import java.net.InetAddress;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cv
 */
public class EventList extends javax.swing.JFrame
{

    private static final String[] COLUMNS = new String[]
    {
	"ID",
	"Data de Início",
	"Data de Fim",
	"Título",
	"Descrição",
	"Criado Em",
	"Alterado Em"
    };

    private Client client;
    private String hostName;
    private int portNumber;

    public EventList()
    {
	initComponents();
	try
	{
	    hostName = InetAddress.getLocalHost().getHostAddress();
	    portNumber = CommonProps.getServerPort();
	    client = new Client(hostName, portNumber);
	} catch (java.net.UnknownHostException e)
	{
	    System.err.println("Error connecting to server");
	} catch (java.io.IOException e)
	{
	    System.err.println("Error opening read and write streams");
	}

	client.setAgenda();
	populateEventTable(client.getAgenda());

    }

    private void populateEventTable(ArrayList<Event> eventos)
    {

	DefaultTableModel model = new DefaultTableModel(COLUMNS, 0);

	for (Event e : eventos)
	{
	    String[] row = new String[COLUMNS.length];
	    row[0] = Integer.toString(e.getId());
	    row[1] = e.getStart() != null ? new SimpleDateFormat("yyyy-MM-dd kk:mm:ss").format(e.getStart()) : "";
	    row[2] = e.getEnd() != null ? new SimpleDateFormat("yyyy-MM-dd kk:mm:ss").format(e.getEnd()) : "";
	    row[3] = e.getTitle();
	    row[4] = e.getDescription();
	    row[5] = e.getCreatedAt() != null ? new SimpleDateFormat("yyyy-MM-dd kk:mm:ss").format(e.getCreatedAt()) : "";
	    row[6] = e.getModifiedAt() != null ? new SimpleDateFormat("yyyy-MM-dd kk:mm:ss").format(e.getModifiedAt()) : "";

	    model.addRow(row);
	}

	EventTable.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        tabbedPanePesquisa = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        buttonSearch = new javax.swing.JButton();
        textFieldSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        EventTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldDataFim = new javax.swing.JTextField();
        textFieldDataInicio = new javax.swing.JTextField();
        textFieldTitulo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        buttonGravar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textAreaDescricao = new javax.swing.JTextArea();
        labelFeedback = new javax.swing.JLabel();
        textFieldID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        buttonApagar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tabbedPanePesquisa.setPreferredSize(new java.awt.Dimension(790, 500));

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        buttonSearch.setText("Pesquisar");
        buttonSearch.setToolTipText("");
        buttonSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buttonSearchActionPerformed(evt);
            }
        });

        textFieldSearch.setToolTipText("");

        EventTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        EventTable.setAutoscrolls(false);
        EventTable.setEnabled(false);
        EventTable.setMaximumSize(new java.awt.Dimension(800, 500));
        EventTable.setName(""); // NOI18N
        EventTable.setPreferredSize(new java.awt.Dimension(800, 300));
        EventTable.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(EventTable);
        EventTable.getAccessibleContext().setAccessibleName("EventTable");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(textFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(185, 185, 185)
                .addComponent(buttonSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textFieldSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSearch, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(40, 40, 40))
        );

        jScrollPane1.getAccessibleContext().setAccessibleName("EventTable");

        tabbedPanePesquisa.addTab("Pesquisa", jPanel1);

        jLabel1.setText("Data de Inicío");

        jLabel2.setText("Data de Fim");

        jLabel3.setText("Título");

        jLabel4.setText("Descrição");

        buttonGravar.setText("Gravar");
        buttonGravar.setToolTipText("");
        buttonGravar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buttonGravarActionPerformed(evt);
            }
        });

        textAreaDescricao.setColumns(20);
        textAreaDescricao.setRows(5);
        jScrollPane2.setViewportView(textAreaDescricao);

        textFieldID.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                textFieldIDFocusLost(evt);
            }
        });

        jLabel5.setText("ID");

        buttonApagar.setBackground(new java.awt.Color(255, 0, 0));
        buttonApagar.setText("Apagar");
        buttonApagar.setActionCommand("");
        buttonApagar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buttonApagarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(buttonApagar))
                        .addGap(202, 202, 202)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldDataInicio)
                            .addComponent(jScrollPane2)
                            .addComponent(textFieldDataFim)
                            .addComponent(textFieldTitulo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textFieldID)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelFeedback)))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(textFieldDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(textFieldTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonGravar)
                    .addComponent(buttonApagar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelFeedback)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        tabbedPanePesquisa.addTab("Modificar Evento", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPanePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPanePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    private void buttonGravarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonGravarActionPerformed
    {//GEN-HEADEREND:event_buttonGravarActionPerformed

	try
	{
	    Date dataInicio = new SimpleDateFormat("dd/MM/yyyy").parse(textFieldDataInicio.getText());
	    Date dateFim = new SimpleDateFormat("dd/MM/yyyy").parse(textFieldDataFim.getText());
	    String titulo = textFieldTitulo.getText();
	    String descricao = textAreaDescricao.getText();
	    String ID;
	    Event e;
	    Message m;
	    // if new event
	    if (textFieldID.getText().equals(""))
	    {
		e = new Event(dataInicio, dateFim, titulo, descricao);
		//TODO: ir buscar feedback
		//m = client.addEvent(e);
		labelFeedback.setText("Evento criado com sucesso");
	    }
	    else
	    {
		ID = textFieldID.getText();

		e = new Event(dataInicio, dateFim, titulo, descricao);
		e.setId(Integer.parseInt(ID));
		//TODO: ir buscar feedback
		//m = client.updateEvent(e);
		labelFeedback.setText("Evento modificado com sucesso");
	    }

	    //TODO: ir buscar feedback
	    //client.processMessage(m);
	    client.setAgenda();

	    labelFeedback.setForeground(Color.GREEN);
	    //clear form
	    textFieldID.setText("");
	    textFieldDataInicio.setText("");
	    textFieldDataFim.setText("");
	    textFieldTitulo.setText("");
	    textAreaDescricao.setText("");
	    //refresh results table
	    populateEventTable(client.getAgenda());

	} catch (ParseException ex)
	{
	    labelFeedback.setText("Erro ao criar Evento. O formato da data é dd/mm/yyyy");
	    labelFeedback.setForeground(Color.RED);
	    return;
	} catch (Exception generalEx)
	{
	    labelFeedback.setText("Ocorreu um erro");
	    labelFeedback.setForeground(Color.RED);
	    return;
	}


    }//GEN-LAST:event_buttonGravarActionPerformed

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonSearchActionPerformed
    {//GEN-HEADEREND:event_buttonSearchActionPerformed
	//        System.out.println("Pesquisar por:\n1 - Data Inicio\n2 - Data Fim\n"
	//                            + "3 - Titulo\n4 - Descrição");
	if (textFieldSearch.getText().equals(""))
	{
	    client.setAgenda();
	}
	else
	{
	    Event e = new Event();
	    e.setTitle(textFieldSearch.getText());
	    ArrayList<Event> eventos = client.findEvent(e);
	}
	    
	

	populateEventTable(client.getAgenda());
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void buttonApagarActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonApagarActionPerformed
    {//GEN-HEADEREND:event_buttonApagarActionPerformed
	try
	{

	    Message m = client.deleteEvent(Integer.parseInt(textFieldID.getText()));
	    client.processMessage(m);
	    client.setAgenda();

	} catch (Exception e)
	{
	    labelFeedback.setText("Erro ao eliminar Evento");
	    labelFeedback.setForeground(Color.RED);
	    return;
	}

	labelFeedback.setText("Evento eliminado com sucesso");
	labelFeedback.setForeground(Color.GREEN);
	//refresh results table
	populateEventTable(client.getAgenda());
    }//GEN-LAST:event_buttonApagarActionPerformed

    private void textFieldIDFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_textFieldIDFocusLost
    {//GEN-HEADEREND:event_textFieldIDFocusLost
	String Id = textFieldID.getText();
	
	if (!Id.equals(""))
	{
	    Event selectedEvent = null;
	    for (Event e : client.getAgenda().getEvents())
	    {
		if (e.getId() == Integer.parseInt(Id))
		{
		    selectedEvent = e;
		}
	    }
	    if (selectedEvent != null){
	    
		String startDateString = 
			new SimpleDateFormat("yyyy-MM-dd kk:mm:ss").format(
				selectedEvent.getStart());
		String endDateString = 
			new SimpleDateFormat("yyyy-MM-dd kk:mm:ss").format(
				selectedEvent.getEnd());
		
		textFieldDataInicio.setText(startDateString);
		textFieldDataFim.setText(endDateString);
		textFieldTitulo.setText(selectedEvent.getTitle());
		textAreaDescricao.setText(selectedEvent.getDescription());
		
		
	    } else {
	    
		textFieldDataInicio.setText("");
		textFieldDataFim.setText("");
		textFieldTitulo.setText("");
		textAreaDescricao.setText("");
	    
	    }
	}


    }//GEN-LAST:event_textFieldIDFocusLost

    public static void main(String args[])
    {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try
	{
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
	    {
		if ("Nimbus".equals(info.getName()))
		{
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex)
	{
	    java.util.logging.Logger.getLogger(EventList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex)
	{
	    java.util.logging.Logger.getLogger(EventList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex)
	{
	    java.util.logging.Logger.getLogger(EventList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex)
	{
	    java.util.logging.Logger.getLogger(EventList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable()
	{
	    public void run()
	    {
		new EventList().setVisible(true);

	    }
	});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable EventTable;
    private javax.swing.JButton buttonApagar;
    private javax.swing.JButton buttonGravar;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelFeedback;
    private javax.swing.JTabbedPane tabbedPanePesquisa;
    private javax.swing.JTextArea textAreaDescricao;
    private javax.swing.JTextField textFieldDataFim;
    private javax.swing.JTextField textFieldDataInicio;
    private javax.swing.JTextField textFieldID;
    private javax.swing.JTextField textFieldSearch;
    private javax.swing.JTextField textFieldTitulo;
    // End of variables declaration//GEN-END:variables
}
